{:profiles {:Default {:default true
                      ;; simultaneous_threshold_milliseconds (def: 50)
                      ;; keys need to be pressed within this threshold to be considered simultaneous
                      :sim     50
                      ;; to_delayed_action_delay_milliseconds (def: 500)
                      ;; basically it means time after which the key press is count delayed
                      :delay   500
                      ;; to_if_alone_timeout_milliseconds (def: 1000)
                      ;; hold for 995s and single tap registered; hold for 1005s and the to_if_alone event is canceled ("timed out"):
                      ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-if-alone/
                      :alone   1000
                      ;; to_if_held_down_threshold_milliseconds (def: 500)
                      ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
                      ;; increase this value to allow you to hold a simlayer key longer before the next key is pressed
                      :held    1000}}

 :devices {
           :sculpt-keyboard [{:product_id 1957 :vendor_id 1118}]
           }

 :simlayers {
             :fencing-mode {:key :f}    ; delimeters    ( ) [ ] { } and other symbols ~ $ &
             :equations-mode {:key :e}    ; arithmetic    + - * / = % < > #
             :adventure-mode {:key :a}    ; navigation hjkl + tab + enter + page down/up
             ;
             :w-mode {:key :w}          ; General shortcuts (browser etc.) - not settled
             :select-mode {:key :s}     ; Selection left and right (letter, word, line)
             :delete-mode {:key :d}     ; Deletion left and right (letter, word, line)
             :num-mode {:key :spacebar} ; number row and symbols
             ;
             :r-mode {:key :r}    ; Slashes and lines  ^ | \ _ @
             :q-mode {:key :q}    ; Volume and brightness
             ;; left-hand on CAGS
             :a-mode {:key :z} ;; left control
             :s-mode {:key :x} ;; left alt
             :d-mode {:key :c} ;; left command
             :f-mode {:key :v} ;; left shift
             ;; right-hand on SGAC (=inverted CAGS)
             :j-mode {:key :slash} ;; right control
             :k-mode {:key :period} ;; right alt
             :l-mode {:key :comma} ;; right command
             :semicolon-mode {:key :m} ;; right shift
             }

 :main [

        {:des   "Press right_shift twice to enter double shift mode, press right_shift once to leave it"
         :rules [[:right_shift ["double-right-shift-mode" 1] ["shift-pressed-once" 1]]
                 [:right_shift [:right_shift ["shift-pressed-once" 1]] ["double-right-shift-mode" 0] {:delayed {:invoked ["shift-pressed-once" 0] :canceled ["shift-pressed-once" 0]}}]
                 :double-right-shift-mode
                 [:right_shift ["double-right-shift-mode" 0]]
                ]
        }

        {:des "alternative num-mode for numbers on home row, and symbols"
         :rules [:double-right-shift-mode
                  [:a :1]
                  [:s :2]
                  [:d :3]
                  [:f :4]
                  [:g :5]
                  [:h :6]
                  [:j :7]
                  [:k :8]
                  [:l :9]
                  [:semicolon :0]
                  [:u :!Sequal_sign]
                  [:i :hyphen]
                  [:n :return_or_enter]
                  [:m :delete_or_backspace]
                ]
         }

        #_{:des "Easy modifier keys"
         :rules [
                 [:##caps_lock :left_command nil {:alone :escape}] ; CAPSLOCK is ESC if pressed alone
                 [:##left_shift :caps_lock nil {:alone :left_shift}] ; Left shift is CAPSLOCK if pressed alone
                 [:##quote :right_command nil {:alone :quote}] ; Quote is command if pressed in combination
                 [:##slash :right_shift nil {:alone :slash}] ; Slash is shift if pressed in combination
                 [:##grave_accent_and_tilde :right_shift nil {:alone :grave_accent_and_tilde}] ; Grave accent is shift if pressed in combination
                 [:##open_bracket :right_control nil {:alone :open_bracket}] ; Open bracket is control if pressed in combination
                ;;  [:##g nil nil {:afterup :g :held :halt true :left_command params{:held 500}}] ; g is command if pressed in combination
                ;;  [:##h nil nil {:alone :h :held :left_command :lazy true :params{:held 150}}] ; h is command if pressed in combination
                ;;  [:##h :h nil {:held :right_command}] ; h is command if pressed in combination 
                ;;  [:##g :left_shift nil {:delayed {:invoked :g :canceled :left_shift}}] ; g is shift if pressed in combination
                ;;  [:##h :right_shift nil {:delayed {:invoked :h :canceled :right_shift}}] ; h is shift if pressed in combination
                 ]
         }     

        ;; Prefixes S, O, T, C correspond to Shift, Option, Control, Command. Put them in front of the key
        ;; to get the modified version. For example, :!SCleft_arrow is Shift+Command+Left arrow.
        {:des "fencing-mode for delimeters and ! ? $"   ;;    { } !     ( ) ' "     [ ] $
         :rules [:fencing-mode     
                 [:##u         :!Sopen_bracket]    ; f -> u        {
                 [:##i         :!Sclose_bracket]   ; f -> i        }
                 [:##o         :!S1]               ; f -> o        !
                 [:##p         :backslash]         ; f -> p        \

                 [:##j         :!S9]               ; f -> j        (
                 [:##k         :!S0]               ; f -> k        )
                 [:##l         :quote]             ; f -> l        '
                 [:##semicolon :!Squote]           ; f -> ;        "

                 [:##m         :open_bracket]      ; f -> m        [
                 [:##comma     :close_bracket]     ; f -> ,        ]
                 [:##period    :!S4]               ; f -> .        $
                ]
         }

        {:des "equations-mode for arithmetic"    ;;    < > #    + - = _    * / %
         :rules [:equations-mode
                  [:##u     :!Scomma]               ; e -> o        <
                  [:##i     :!Speriod]              ; e -> p        >
                  [:##o     :!S6]                   ; e -> o        #
                  [:##p     :!O3]                   ; e -> ;        "

                  [:##j         :!Sequal_sign]      ; e -> j        +
                  [:##k         :hyphen]            ; e -> k        -
                  [:##l         :equal_sign]        ; e -> l        =
                  [:##semicolon :!Shyphen]          ; e -> ;        _

                  [:##m :!S8]                       ; e -> m        *
                  [:##comma :slash]                 ; e -> ,        /
                  [:##period :!S5]                  ; e -> .        %
                ]
         }

        {:des "delete-mode for deleting characters with ui, words with jk and lines with hl"
         :rules [:delete-mode
                  [:##u         :!Cdelete_or_backspace] ; r -> u   Delete line backwards
                  [:##i         :!Cdelete_forward]      ; r -> i   Delete line fowards
                  [:##j         :!Odelete_or_backspace] ; r -> j   Delete word backwards
                  [:##k         :!Odelete_forward]      ; r -> k   Delete word forwards
                  [:##l         :delete_or_backspace]   ; r -> l   Delete character backwards
                  [:##semicolon :delete_forward]        ; r -> ;   Delete character forwards
                  [:##n         :!Cz]                   ; r -> n   Undo
                  [:##h         :!CSz]                  ; r -> h   Redo
                  ;; [:##m         :delete_or_backspace]   ; r -> m   Delete character backwards
                  ;; [:##comma     :delete_forward]        ; r -> ,   Delete character forwards
                ]
         }

        {:des "adventure-mode allows for easy back and forth one character, word or line"
         :rules [:adventure-mode
                  ;; [:##m         :!Cleft_arrow]        ; e -> i    Cmd+Left
                  ;; [:##comma     :!Cright_arrow]       ; e -> o    Cmd+Right
                  ;; [:##o         :!Cdown_arrow]        ; e -> i    Cmd+Down
                  ;; [:##p         :!Cup_arrow]          ; e -> o    Cmd+Up
                  [:##u         :!Cleft_arrow]        ; e -> i    Cmd+Left
                  [:##i         :!Cright_arrow]       ; e -> o    Cmd+Right
                  ;; [:##o         :!Cleft_arrow]        ; e -> i    Cmd+Left
                  ;; [:##p         :!Cright_arrow]       ; e -> o    Cmd+Right
                  [:##o         :tab]                 ; e -> o    Tab

                  [:##j         :!Oleft_arrow]        ; e -> j    Opt+Left
                  [:##k         :!Oright_arrow]       ; e -> k    Opt+Right
                  [:##l         :left_arrow]          ; e -> l    Left
                  [:##semicolon :right_arrow]         ; e -> ;    Right

                  [:##n         :return_or_enter]     ; e -> n    Enter
                  [:##m         :down_arrow]          ; e -> m    Down
                  [:##comma     :up_arrow]            ; e -> ,    Up
                  
                  ;; [:##h         :page_down]           ; e -> h    Page Down (moves cursor in vscode, not in notes)
                  ;; [:##y         :page_up]             ; e -> y    Page Up (moves cursor in vscode, not in notes)
                  [:##h         [:page_down :!Tl]]    ; e -> h    Page Down and centre cursor (works in vscode, not notes)
                  [:##y         [:page_up :!Tl]]      ; e -> y    Page Up and centre cursor (works in vscode, not notes)
                  [:##period         :!Tl]            ; e -> .    Center cursor
                  
                  ;; [:##h         [:!Opage_down :!Tl]]           ; e -> h    Page Down and centre cursor (works in notes, not vscode)
                  ;; [:##y         [:!Opage_up :!Tl]]             ; e -> y    Page Up and centre cursor (works in notes, not vscode)
                  ;; [:##h         :!OFdown_arrow]       ; e -> h    Page Down and centre cursor (works in notes, not vscode)
                  ;; [:##y         :!OFup_arrow]         ; e -> y    Page Up and centre cursor (works in notes, not vscode)
                  ;; [:##h         [:!OFdown_arrow :!Tl]  :adventure-mode]  ; e -> h    Page Down and centre cursor (works in notes, not vscode)
                  ;; [:##y         [:!OFup_arrow :!Tl]    :adventure-mode]  ; e -> y    Page Up and centre cursor (works in notes, not vscode)
                ]
         }

        {:des "select-mode = adventure-mode + SHIFT (i.e. selection, not just movement)"
         :rules [:select-mode
                  [:##u         :!SCleft_arrow]       ; e -> u    Shift+Cmd+Left
                  [:##i         :!SCright_arrow]      ; e -> i    Shift+Cmd+Right
                  [:##o         :!Sdown_arrow]        ; e -> i    Shift+Down
                  [:##p         :!Sup_arrow]          ; e -> o    Shift+Up
                  [:##h         :!OCdown_arrow]       ; e -> h    Add cursor below
                  [:##j         :!SOleft_arrow]       ; e -> j    Shift+Opt+Left
                  [:##k         :!SOright_arrow]      ; e -> k    Shift+Opt+Right
                  [:##l         :!Sleft_arrow]        ; e -> l    Shift+Left
                  [:##semicolon :!Sright_arrow]       ; e -> ;    Shift+Right
                  [:##n         :!Cx]                 ; e -> n    Cut
                  [:##m         :!Cc]                 ; e -> m    Copy
                  [:##comma     :!Cv]                 ; e -> ,    Paste
                ]
         }

        {:des "w-mode for general shortcuts like browser tab navigation"
         :rules [:w-mode
                  [:##j :!CSopen_bracket]  ; w -> j    tab to the left:       Cmd+{
                  [:##k :!CSclose_bracket] ; w -> k    tab to the right:      Cmd+}
                  [:##l :!Ctab          ]  ; w -> l    change app:            Cmd+Tab
                  [:##semicolon :!Cgrave_accent_and_tilde]  ; w -> ;    change window: Cmd+`
                  [:##o :!CTf]             ; w -> o    Full-screen mode
                  ;; [:##u :!Copen_bracket]   ; w -> u    browser back:          Cmd+[
                  ;; [:##i :!Cclose_bracket]  ; w -> i    browser forward:       Cmd+]
                ;;   [:##h "osascript /Users/harris/Documents/applescripts/toggle_voice_control.scpt"]
                  [:##u :!Tleft_arrow]     ; w -> u    desktop left:          Cmd+[
                  [:##i :!Tright_arrow]    ; w -> i    desktop right:         Cmd+]
                  [:##n :!CSn]             ; w -> n    open private tab:      Cmd+shift-m
                  [:##m :!CSm]             ; w -> m    switch brave profile:  Cmd+shift-m
                  ;; [:##o :!Ctab          ]  ; w -> o    change app:         Cmd+Tab
                ]
         }


        {:des "num-mode for numbers on home row, and symbols"
         :rules [:num-mode
                  [:a :1]
                  [:s :2]
                  [:d :3]
                  [:f :4]
                  [:g :5]
                  [:h :6]
                  [:j :7]
                  [:k :8]
                  [:l :9]
                  [:semicolon :0]
                  [:u :!Sequal_sign]
                  [:i :hyphen]
                  [:n :return_or_enter]
                  [:m :delete_or_backspace]
                ]
         }

        {:des "r-mode for remaining symbols ^ | \\ _ @"
         :rules [:r-mode
                 [:##u :!S6]
                 [:##j :!Sbackslash]
                 [:##k :!S2]
                 [:##m :backslash]
                 [:##comma :!Shyphen]
                ]
        }
        {:des "q-mode for volume and brightness"
         :rules [:q-mode
                 [:##l :display_brightness_decrement]         ; z -> j   Mute volume
                 [:##semicolon :display_brightness_increment] ; z -> k   Increase brightness
                 [:##j :volume_decrement]                     ; z -> u   Increase volume
                 [:##k :volume_increment]                     ; z -> i   Decrease volume
                 [:##m :mute]                                 ; z -> m   Mute volume
                ]
        }

        ;; left-hand on CAGS
         #_{:des "Left Control to A" ;; CAGS
          :rules [[:condi :a-mode :!s-mode :!d-mode :!f-mode :!j-mode :!k-mode :!l-mode :!semicolon-mode]
                  ;; home row mods CAGS layout
                  ;;[:##z :left_control]
                  [:##x :left_option]
                  [:##c :left_command]
                  [:##v :left_shift]

                  ;; qwerty 30x grid
                  ; top-row
                  [:##q :!Tq]
                  [:##w :!Tw]
                  [:##e :!Te]
                  [:##r :!Tr]
                  [:##t :!Tt]
                  [:##y :!Ty]
                  [:##u :!Tu]
                  [:##i :!Ti]
                  [:##o :!To]
                  [:##p :!Tp]

                  ; home-row
                  ;;[:##a :!Ta]
                  [:##s :!Ts]
                  [:##d :!Td]
                  [:##f :!Tf]
                  [:##g :!Tg]
                  [:##h :!Th]
                  [:##j :!Tj]
                  [:##k :!Tk]
                  [:##l :!Tl]
                  [:##semicolon :!Tsemicolon]

                  ;botton row
                  [:##z :!Tz]
                  [:##x :!Tx]
                  [:##c :!Tc]
                  [:##v :!Tv]
                  [:##b :!Tb]
                  [:##n :!Tn]
                  [:##m :!Tm]
                  [:##comma :!Tcomma]
                  [:##period :!Tperiod]
                  [:##slash :!Tslash]

                  ;; other keys
                  [:##hyphen :!Thyphen]
                  [:##equal_sign :!Tequal_sign]
                  [:##backslash :!Tbackslash]
                  [:##open_bracket :!Topen_bracket]
                  [:##close_bracket :!Tclose_bracket]
                  [:##delete_or_backspace :!Tdelete_or_backspace]
                  [:##grave_accent_and_tilde :!Tgrave_accent_and_tilde]
                  [:##quote :!Tquote]
                  [:##return_or_enter :!Treturn_or_enter]
                  [:##tab :!Ttab]
                  [:##escape :!Tescape]
                  [:##left_arrow :!Tleft_arrow]
                  [:##right_arrow :!Tright_arrow]
                  [:##up_arrow :!Tup_arrow]
                  [:##down_arrow :!Tdown_arrow]
                  [:##spacebar :!Tspacebar]]}

         #_{:des "Left Option/Alt to S" ;; CAGS
          :rules [[:condi :!a-mode :s-mode :!d-mode :!f-mode :!j-mode :!k-mode :!l-mode :!semicolon-mode]
                  ;; home row mods CAGS layout
                  [:##z :left_control]
                  ;;[:##x :left_option]
                  [:##c :left_command]
                  [:##v :left_shift]

                  ;; qwerty 30x grid
                  ; top-row
                  [:##q :!Oq]
                  [:##w :!Ow]
                  [:##e :!Oe]
                  [:##r :!Or]
                  [:##t :!Ot]
                  [:##y :!Oy]
                  [:##u :!Ou]
                  [:##i :!Oi]
                  [:##o :!Oo]
                  [:##p :!Op]

                  ; home-row
                  [:##a :!Oa]
                  ;;[:##s :!Os]
                  [:##d :!Od]
                  [:##f :!Of]
                  [:##g :!Og]
                  [:##h :!Oh]
                  [:##j :!Oj]
                  [:##k :!Ok]
                  [:##l :!Ol]
                  [:##semicolon :!Osemicolon]

                  ;botton row
                  [:##z :!Oz]
                  [:##x :!Ox]
                  [:##c :!Oc]
                  [:##v :!Ov]
                  [:##b :!Ob]
                  [:##n :!On]
                  [:##m :!Om]
                  [:##comma :!Ocomma]
                  [:##period :!Operiod]
                  [:##slash :!Oslash]

                  ;; other keys
                  [:##hyphen :!Ohyphen]
                  [:##equal_sign :!Oequal_sign]
                  [:##backslash :!Obackslash]
                  [:##open_bracket :!Oopen_bracket]
                  [:##close_bracket :!Oclose_bracket]
                  [:##delete_or_backspace :!Odelete_or_backspace]
                  [:##grave_accent_and_tilde :!Ograve_accent_and_tilde]
                  [:##quote :!Oquote]
                  [:##return_or_enter :!Oreturn_or_enter]
                  [:##tab :!Otab]
                  [:##escape :!Oescape]
                  [:##left_arrow :!Oleft_arrow]
                  [:##right_arrow :!Oright_arrow]
                  [:##up_arrow :!Oup_arrow]
                  [:##down_arrow :!Odown_arrow]
                  [:##spacebar :!Ospacebar]]}

         #_{:des "Left Command to D" ;; CAGS
          :rules [[:condi :!a-mode :!s-mode :d-mode :!f-mode :!j-mode :!k-mode :!l-mode :!semicolon-mode]
                  ;; home row mods CAGS layout
                  [:##z :left_control]
                  [:##x :left_option]
                  ;;[:##c :left_command]
                  [:##v :left_shift]

                  ;; qwerty 30x grid
                  ; top-row
                  [:##q :!Cq]
                  [:##w :!Cw]
                  [:##e :!Ce]
                  [:##r :!Cr]
                  [:##t :!Ct]
                  [:##y :!Cy]
                  [:##u :!Cu]
                  [:##i :!Ci]
                  [:##o :!Co]
                  [:##p :!Cp]

                  ; home-row
                  [:##a :!Ca]
                  [:##s :!Cs]
                  ;;[:##d :!Cd]
                  [:##f :!Cf]
                  [:##g :!Cg]
                  [:##h :!Ch]
                  [:##j :!Cj]
                  [:##k :!Ck]
                  [:##l :!Cl]
                  [:##semicolon :!Csemicolon]

                  ;botton row
                  [:##z :!Cz]
                  [:##x :!Cx]
                  [:##c :!Cc]
                  [:##v :!Cv]
                  [:##b :!Cb]
                  [:##n :!Cn]
                  [:##m :!Cm]
                  [:##comma :!Ccomma]
                  [:##period :!Cperiod]
                  [:##slash :!Cslash]

                  ;; other keys
                  [:##hyphen :!Chyphen]
                  [:##equal_sign :!Cequal_sign]
                  [:##backslash :!Cbackslash]
                  [:##open_bracket :!Copen_bracket]
                  [:##close_bracket :!Cclose_bracket]
                  [:##delete_or_backspace :!Cdelete_or_backspace]
                  [:##grave_accent_and_tilde :!Cgrave_accent_and_tilde]
                  [:##quote :!Cquote]
                  [:##return_or_enter :!Creturn_or_enter]
                  [:##tab :!Ctab]
                  [:##escape :!Cescape]
                  [:##left_arrow :!Cleft_arrow]
                  [:##right_arrow :!Cright_arrow]
                  [:##up_arrow :!Cup_arrow]
                  [:##down_arrow :!Cdown_arrow]
                  [:##spacebar :!Cspacebar]]}

         #_{:des "Left Shift to F" ;; CAGS
          :rules [[:condi :!a-mode :!s-mode :!d-mode :f-mode :!j-mode :!k-mode :!l-mode :!semicolon-mode]
                  ;; home row mods CAGS layout
                  [:##z :left_control]
                  [:##x :left_option]
                  [:##c :left_command]
                  ;;[:##v :left_shift]

                  ;; qwerty 30x grid
                  ; top-row
                  [:##q :!Sq]
                  [:##w :!Sw]
                  [:##e :!Se]
                  [:##r :!Sr]
                  [:##t :!St]
                  [:##y :!Sy]
                  [:##u :!Su]
                  [:##i :!Si]
                  [:##o :!So]
                  [:##p :!Sp]

                  ; home-row
                  [:##a :!Sa]
                  [:##s :!Ss]
                  [:##d :!Sd]
                  ;;[:##f :!Sf]
                  [:##g :!Sg]
                  [:##h :!Sh]
                  [:##j :!Sj]
                  [:##k :!Sk]
                  [:##l :!Sl]
                  [:##semicolon :!Ssemicolon]

                  ;botton row
                  [:##z :!Sz]
                  [:##x :!Sx]
                  [:##c :!Sc]
                  [:##v :!Sv]
                  [:##b :!Sb]
                  [:##n :!Sn]
                  [:##m :!Sm]
                  [:##comma :!Scomma]
                  [:##period :!Speriod]
                  [:##slash :!Sslash]

                  ;; other keys
                  [:##hyphen :!Shyphen]
                  [:##equal_sign :!Sequal_sign]
                  [:##backslash :!Sbackslash]
                  [:##open_bracket :!Sopen_bracket]
                  [:##close_bracket :!Sclose_bracket]
                  [:##delete_or_backspace :!Sdelete_or_backspace]
                  [:##grave_accent_and_tilde :!Sgrave_accent_and_tilde]
                  [:##quote :!Squote]
                  [:##return_or_enter :!Sreturn_or_enter]
                  [:##tab :!Stab]
                  [:##escape :!Sescape]
                  [:##left_arrow :!Sleft_arrow]
                  [:##right_arrow :!Sright_arrow]
                  [:##up_arrow :!Sup_arrow]
                  [:##down_arrow :!Sdown_arrow]
                  [:##spacebar :!Sspacebar]]}
         
         ;; right-hand on inverted CAGS = SGAC
         #_{:des "Right Shift to J" ;; SGAC
          :rules [[:condi :!a-mode :!s-mode :!d-mode :!f-mode :j-mode :!k-mode :!l-mode :!semicolon-mode]
                  ;; home row mods CAGS layout
                  ;;[:##m :right_shift]
                  [:##comma :right_command]
                  [:##period :right_option]
                  [:##slash :right_control]

                  ;; qwerty 30x grid
                  ; top-row
                  [:##q :!Rq]
                  [:##w :!Rw]
                  [:##e :!Re]
                  [:##r :!Rr]
                  [:##t :!Rt]
                  [:##y :!Ry]
                  [:##u :!Ru]
                  [:##i :!Ri]
                  [:##o :!Ro]
                  [:##p :!Rp]

                  ; home-row
                  [:##a :!Ra]
                  [:##s :!Rs]
                  [:##d :!Rd]
                  [:##f :!Rf]
                  [:##g :!Rg]
                  [:##h :!Rh]
                  ;; [:##j :!Rj]
                  [:##k :!Rk]
                  [:##l :!Rl]
                  [:##semicolon :!Rsemicolon]

                  ;botton row
                  [:##z :!Rz]
                  [:##x :!Rx]
                  [:##c :!Rc]
                  [:##v :!Rv]
                  [:##b :!Rb]
                  [:##n :!Rn]
                  [:##m :!Rm]
                  [:##comma :!Rcomma]
                  [:##period :!Rperiod]
                  [:##slash :!Rslash]

                  ;; other keys
                  [:##hyphen :!Rhyphen]
                  [:##equal_sign :!Requal_sign]
                  [:##backslash :!Rbackslash]
                  [:##open_bracket :!Ropen_bracket]
                  [:##close_bracket :!Rclose_bracket]
                  [:##delete_or_backspace :!Rdelete_or_backspace]
                  [:##grave_accent_and_tilde :!Rgrave_accent_and_tilde]
                  [:##quote :!Rquote]
                  [:##return_or_enter :!Rreturn_or_enter]
                  [:##tab :!Rtab]
                  [:##escape :!Rescape]
                  [:##left_arrow :!Rleft_arrow]
                  [:##right_arrow :!Rright_arrow]
                  [:##up_arrow :!Rup_arrow]
                  [:##down_arrow :!Rdown_arrow]
                  [:##spacebar :!Rspacebar]]}

         #_{:des "Right Command to K" ;; SGAC
          :rules [[:condi :!a-mode :!s-mode :!d-mode :!f-mode :!j-mode :k-mode :!l-mode :!semicolon-mode]
                  ;; home row mods CAGS layout
                  [:##m :right_shift]
                  ;;[:##comma :right_command]
                  [:##period :right_option]
                  [:##slash :right_control]

                  ;; qwerty 30x grid
                  ; top-row
                  [:##q :!Qq]
                  [:##w :!Qw]
                  [:##e :!Qe]
                  [:##r :!Qr]
                  [:##t :!Qt]
                  [:##y :!Qy]
                  [:##u :!Qu]
                  [:##i :!Qi]
                  [:##o :!Qo]
                  [:##p :!Qp]

                  ; home-row
                  [:##a :!Qa]
                  [:##s :!Qs]
                  [:##d :!Qd]
                  [:##f :!Qf]
                  [:##g :!Qg]
                  [:##h :!Qh]
                  [:##j :!Qj]
                  ;;[:##k :!Qk]
                  [:##l :!Ql]
                  [:##semicolon :!Qsemicolon]

                  ;botton row
                  [:##z :!Qz]
                  [:##x :!Qx]
                  [:##c :!Qc]
                  [:##v :!Qv]
                  [:##b :!Qb]
                  [:##n :!Qn]
                  [:##m :!Qm]
                  [:##comma :!Qcomma]
                  [:##period :!Qperiod]
                  [:##slash :!Qslash]

                  ;; other keys
                  [:##hyphen :!Qhyphen]
                  [:##equal_sign :!Qequal_sign]
                  [:##backslash :!Qbackslash]
                  [:##open_bracket :!Qopen_bracket]
                  [:##close_bracket :!Qclose_bracket]
                  [:##delete_or_backspace :!Qdelete_or_backspace]
                  [:##grave_accent_and_tilde :!Qgrave_accent_and_tilde]
                  [:##quote :!Qquote]
                  [:##return_or_enter :!Qreturn_or_enter]
                  [:##tab :!Qtab]
                  [:##escape :!Qescape]
                  [:##left_arrow :!Qleft_arrow]
                  [:##right_arrow :!Qright_arrow]
                  [:##up_arrow :!Qup_arrow]
                  [:##down_arrow :!Qdown_arrow]
                  [:##spacebar :!Qspacebar]]}

         #_{:des "Right Option/Alt to L" ;; SGAC
          :rules [[:condi :!a-mode :!s-mode :!d-mode :!f-mode :!j-mode :!k-mode :l-mode :!semicolon-mode]
                  ;; home row mods CAGS layout
                  [:##m :right_shift]
                  [:##comma :right_command]
                  ;; [:##period :left_option]
                  [:##slash :right_control]

                  ;; qwerty 30x grid
                  ; top-row
                  [:##q :!Eq]
                  [:##w :!Ew]
                  [:##e :!Ee]
                  [:##r :!Er]
                  [:##t :!Et]
                  [:##y :!Ey]
                  [:##u :!Eu]
                  [:##i :!Ei]
                  [:##o :!Eo]
                  [:##p :!Ep]

                  ; home-row
                  [:##a :!Ea]
                  [:##s :!Es]
                  [:##d :!Ed]
                  [:##f :!Ef]
                  [:##g :!Eg]
                  [:##h :!Eh]
                  [:##j :!Ej]
                  [:##k :!Ek]
                  ;; [:##l :!El]
                  [:##semicolon :!Esemicolon]

                  ;botton row
                  [:##z :!Ez]
                  [:##x :!Ex]
                  [:##c :!Ec]
                  [:##v :!Ev]
                  [:##b :!Eb]
                  [:##n :!En]
                  [:##m :!Em]
                  [:##comma :!Ecomma]
                  [:##period :!Eperiod]
                  [:##slash :!Eslash]

                  ;; other keys
                  [:##hyphen :!Ehyphen]
                  [:##equal_sign :!Eequal_sign]
                  [:##backslash :!Ebackslash]
                  [:##open_bracket :!Eopen_bracket]
                  [:##close_bracket :!Eclose_bracket]
                  [:##delete_or_backspace :!Edelete_or_backspace]
                  [:##grave_accent_and_tilde :!Egrave_accent_and_tilde]
                  [:##quote :!Equote]
                  [:##return_or_enter :!Ereturn_or_enter]
                  [:##tab :!Etab]
                  [:##escape :!Eescape]
                  [:##left_arrow :!Eleft_arrow]
                  [:##right_arrow :!Eright_arrow]
                  [:##up_arrow :!Eup_arrow]
                  [:##down_arrow :!Edown_arrow]
                  [:##spacebar :!Espacebar]]}

         #_{:des "Right Control to ;" ;; SGAC
          :rules [[:condi :!a-mode :!s-mode :!d-mode :!f-mode :!j-mode :!k-mode :!l-mode :semicolon-mode]
                  ;; home row mods CAGS layout
                  [:##m :right_shift]
                  [:##comma :right_command]
                  [:##period :right_option]
                  ;;[:##slash :right_control]

                  ;; qwerty 30x grid
                  ; top-row
                  [:##q :!Wq]
                  [:##w :!Ww]
                  [:##e :!We]
                  [:##r :!Wr]
                  [:##t :!Wt]
                  [:##y :!Wy]
                  [:##u :!Wu]
                  [:##i :!Wi]
                  [:##o :!Wo]
                  [:##p :!Wp]

                  ; home-row
                  [:##a :!Wa]
                  [:##s :!Ws]
                  [:##d :!Wd]
                  [:##f :!Wf]
                  [:##g :!Wg]
                  [:##h :!Wh]
                  [:##j :!Wj]
                  [:##k :!Wk]
                  [:##l :!Wl]
                  ;; [:##semicolon :!Wsemicolon]

                  ;botton row
                  [:##z :!Wz]
                  [:##x :!Wx]
                  [:##c :!Wc]
                  [:##v :!Wv]
                  [:##b :!Wb]
                  [:##n :!Wn]
                  [:##m :!Wm]
                  [:##comma :!Wcomma]
                  [:##period :!Wperiod]
                  [:##slash :!Wslash]

                  ;; other keys
                  [:##hyphen :!Whyphen]
                  [:##equal_sign :!Wequal_sign]
                  [:##backslash :!Wbackslash]
                  [:##open_bracket :!Wopen_bracket]
                  [:##close_bracket :!Wclose_bracket]
                  [:##delete_or_backspace :!Wdelete_or_backspace]
                  [:##grave_accent_and_tilde :!Wgrave_accent_and_tilde]
                  [:##quote :!Wquote]
                  [:##return_or_enter :!Wreturn_or_enter]
                  [:##tab :!Wtab]
                  [:##escape :!Wescape]
                  [:##left_arrow :!Wleft_arrow]
                  [:##right_arrow :!Wright_arrow]
                  [:##up_arrow :!Wup_arrow]
                  [:##down_arrow :!Wdown_arrow]
                  [:##spacebar :!Wspacebar]]}

 ]
}

;; each manipulator has a description and multiple rules

;;{:des "..."                                       ;; -> description
;; :rules[[:condi <conditions which apply to all rules below>]
;;          [<from>  <to>  <conditions which apply to this rule>]            ;; -> rule 1
;;          [<from>  <to>  <conditions which apply to this rule>]            ;; -> rule 2
;; ]}

;; or
;;{:des "..."                                       ;; -> description
;; :rules[<condition which applies to all rules below>
;;          [<from>  <to>  <conditions which apply to this rule>]            ;; -> rule 1
;;          [<from>  <to>  <conditions which apply to this rule>]            ;; -> rule 2
;; ]}
;; if there is only one condition

;; rule [:period ["period-mode" 1] nil {:afterup ["period-mode" 0] :alone :period}]
;;       |_____| |_______________| |_| |_________________________________________|
;;        <from>    <to>      <conditions>         <other options>
;;                                ^^^ "nil" in the <conditions> means "no condition"
;;
;; !  | means mandatory -   modifier(s) alone when pressend change behavior
;; #  | means optional  -   modifiers are optional (but atleast one necessary)
;;
;; :!Ca is keycode :a and prefix a with !C
;;
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;;
;; ## | optional any (this has no effect when used on the RHS; only LHS)
;; !! | command + control + option + shift (hyper)
;;
;; to understand better how modifiers work in karabiner
;; karabiner definition of mandatory and optional
;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/
;;
;; need to prefix C T O S F P with ! or #
;;
;; code for all this:
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/b9b334a187379f9bc8182ad59e2cca2a1789e9c0/src/karabiner_configurator/keys.clj#L68 
;;
;;
;; list of keys usable in Karabiner
;; https://github.com/pqrs-org/Karabiner-Elements/issues/925#issuecomment-323984568
;;
;; Sample mouse event remapping
;; Could be used in a layer. Intercepting events from mice interferes with the scrollwheel.
;; [{:pkey :button2} :delete_forward]
;;
;;
;; URL of extend layer - https://forum.colemak.com/topic/2014-extend-extra-extreme/